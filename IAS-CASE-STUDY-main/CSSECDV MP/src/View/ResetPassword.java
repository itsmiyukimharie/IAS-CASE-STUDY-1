/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View;

//import javax.swing.JOptionPane;
import Controller.ForgotPasswordController;
import javax.swing.JOptionPane;

//import Controller.ForgotPasswordController;
public class ResetPassword extends javax.swing.JPanel {

//    private String token;
    private final String userEmail;
    public Frame frame;
    ForgotPasswordController controller = new ForgotPasswordController();

    public ResetPassword(String email) {
        this.userEmail = email;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        passwordInput = new javax.swing.JPasswordField();
        confirmPasswordInput = new javax.swing.JPasswordField();
        savechangesbtn = new javax.swing.JButton();
        showPassword = new javax.swing.JCheckBox();
        backBtn = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Reset Password");

        passwordInput.setBackground(new java.awt.Color(240, 240, 240));
        passwordInput.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        passwordInput.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        passwordInput.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "New Password", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        passwordInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordInputActionPerformed(evt);
            }
        });

        confirmPasswordInput.setBackground(new java.awt.Color(240, 240, 240));
        confirmPasswordInput.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        confirmPasswordInput.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        confirmPasswordInput.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "Confirm Password", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        confirmPasswordInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmPasswordInputActionPerformed(evt);
            }
        });

        savechangesbtn.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        savechangesbtn.setText("SAVE CHANGES");
        savechangesbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savechangesbtnActionPerformed(evt);
            }
        });

        showPassword.setText("Show Password");
        showPassword.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        showPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showPasswordActionPerformed(evt);
            }
        });

        backBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        backBtn.setText("<Back to Login");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(backBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(158, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 411, Short.MAX_VALUE)
                            .addComponent(showPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 411, Short.MAX_VALUE)
                            .addComponent(passwordInput, javax.swing.GroupLayout.DEFAULT_SIZE, 411, Short.MAX_VALUE)
                            .addComponent(confirmPasswordInput, javax.swing.GroupLayout.DEFAULT_SIZE, 411, Short.MAX_VALUE))))
                .addContainerGap(158, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(savechangesbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(backBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(passwordInput, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(confirmPasswordInput, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(showPassword)
                .addGap(38, 38, 38)
                .addComponent(savechangesbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(99, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void passwordInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordInputActionPerformed

    private void confirmPasswordInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmPasswordInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_confirmPasswordInputActionPerformed

    private void savechangesbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savechangesbtnActionPerformed
        String password = new String(passwordInput.getPassword());
        String confirmPassword = new String(confirmPasswordInput.getPassword());
        String passwordRegex = "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[\\W_])[A-Za-z\\d\\W_]{8,128}$";

        if (password.isEmpty() && confirmPassword.isEmpty()) {
            JOptionPane.showMessageDialog(this, "All fields are required.", "Failed", JOptionPane.ERROR_MESSAGE);
            return;
        } else if (password.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Password field is required.", "Failed", JOptionPane.ERROR_MESSAGE);
            return;
        } else if (!password.matches(passwordRegex)) {
            JOptionPane.showMessageDialog(this, "Password must be at least 8 characters long, include uppercase, lowercase, numbers, and special characters.", "Failed", JOptionPane.ERROR_MESSAGE);
            return;
        } else if (confirmPassword.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Confirm password field is required.", "Failed", JOptionPane.ERROR_MESSAGE);
            return;
        } else if (!confirmPassword.equals(password)) {
            JOptionPane.showMessageDialog(this, "Password don't match", "Failed", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        boolean result = controller.updatePassword(this.userEmail, password);
        
        if (result) {
            JOptionPane.showMessageDialog(null, "Password updated successfully.");
            frame.loginNav();
        } else {
            JOptionPane.showMessageDialog(this, "Failed to reset the password", "Password Reset Failed", JOptionPane.ERROR_MESSAGE);
            return;
        }
    }//GEN-LAST:event_savechangesbtnActionPerformed

    private void showPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showPasswordActionPerformed

        if (showPassword.isSelected()) {
            passwordInput.setEchoChar((char) 0);
            confirmPasswordInput.setEchoChar((char) 0);
        } else {
            passwordInput.setEchoChar('•');
            confirmPasswordInput.setEchoChar('•');
        }
    }//GEN-LAST:event_showPasswordActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        clearInputs();
        frame.loginNav();
    }//GEN-LAST:event_backBtnActionPerformed

    private void clearInputs() {
        passwordInput.setText("");
        confirmPasswordInput.setText("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JPasswordField confirmPasswordInput;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPasswordField passwordInput;
    private javax.swing.JButton savechangesbtn;
    private javax.swing.JCheckBox showPassword;
    // End of variables declaration//GEN-END:variables
}
